// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "padding": 20,
        "paddingBottom": 0,
      },
      Object {
        "backgroundColor": "#E4F5F3",
      },
    ]
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginBottom": 20,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
    >
      <Text />
      <Text
        style={
          Object {
            "color": "#5C7B8A",
            "fontSize": 18,
            "marginLeft": 10,
          }
        }
      >
        Back
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginLeft": "auto",
          "opacity": 1,
          "width": 30,
        }
      }
    >
      <Text />
    </View>
  </View>
  <RCTScrollView
    showsVerticalScrollIndicator={false}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "http://image.tmdb.org/t/p/w400/ekjrhtkjert",
            }
          }
          style={
            Object {
              "borderRadius": 20,
              "height": 300,
              "marginBottom": 20,
              "width": 300,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#0B354F",
              "fontSize": 22,
              "marginBottom": 10,
            }
          }
        >
          Rwer
        </Text>
        <Text
          style={
            Object {
              "color": "#5C7B8A",
              "fontSize": 26,
              "marginBottom": 5,
            }
          }
        >
          5.6
        </Text>
        <View
          pointerEvents="none"
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View
            forwardedRef={[Function]}
            style={Object {}}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text />
            </View>
          </View>
          <View
            forwardedRef={[Function]}
            style={Object {}}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text />
            </View>
          </View>
          <View
            forwardedRef={[Function]}
            style={Object {}}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text />
            </View>
          </View>
          <View
            forwardedRef={[Function]}
            style={Object {}}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text />
            </View>
          </View>
          <View
            forwardedRef={[Function]}
            style={Object {}}
          >
            <View
              accessibilityRole="button"
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#0B354F",
              "fontSize": 25,
              "marginBottom": 10,
              "marginTop": 25,
            }
          }
        >
          Description
        </Text>
        <Text
          style={
            Object {
              "color": "#242424",
            }
          }
        >
          
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
